
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


#点播视频服务器的配置
rtmp {                #RTMP服务
    server {
        listen 1935;  #//服务端口 
        chunk_size 4096;   #//数据传输块的大小

        application vod { #rtmp://x.x.x.x/vod/xxx.mp4 
            play /usr/local/nginx/html/video/vod; #//视频文件存放位置。
        }

        application flv { #推流地址： rtmp://x.x.x.x/flv/xxx
                           #播放地址： rtmp://x.x.x.x/flv/xxx
            live on;
            gop_cache on;
        }
        application hls { #推流地址： rtmp://x.x.x.x/hls/xxx
                           #播放地址： rtmp://x.x.x.x/hls/xxx
            live on;
            gop_cache on;
            hls on;
            hls_path /usr/local/nginx/html/video/hls;
            hls_fragment 1s;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 10m;
    
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/local/nginx/html;
            index  index.html index.htm;
        }
        
        location /device {
            alias   /;
            autoindex on; # 开启目录文件列表
            autoindex_exact_size on; # 显示出文件的确切大小，单位是bytes
            autoindex_localtime on; # 显示的文件时间为文件的服务器时间
            charset utf-8,gbk; # 避免中文乱码
        }

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /stat { #状态页面访问地址：
                         #http://x.x.x.x/stat
                rtmp_stat all;
                rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root nginx-http-flv-module/;
        }

        location /vod {  #http://x.x.x.x/vod/xxx.mp4 
                        #http://x.x.x.x/vod/xxx.flv
            alias /usr/local/nginx/video/vod;   
        } 

        location /hls { #http://x.x.x.x/hls/xxx.m3u8
            alias /usr/local/nginx/html/video/hls; 
        }

        location /flv {
            flv_live on;
            chunked_transfer_encoding on;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


       location = /demo.cgi {
           fastcgi_pass   127.0.0.1:8081;
           fastcgi_index  index.cgi;
           include        fastcgi.conf;
       }

       location ~ .*\.cgi$ {
           root     /usr/local/nginx/html/cgi-bin;
           fastcgi_pass   127.0.0.1:8085;
           fastcgi_index  index.cgi;
           include        fastcgi.conf;
       }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
